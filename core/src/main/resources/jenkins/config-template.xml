<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1254.v3f64639b_11dd">
    <actions>
        <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
        <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
            <jobProperties/>
            <triggers/>
            <parameters/>
            <options/>
        </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
    </actions>
    <description></description>
    <keepDependencies>false</keepDependencies>
    <properties>
        <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
            <abortPrevious>false</abortPrevious>
        </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
        <jenkins.model.BuildDiscarderProperty>
            <strategy class="hudson.tasks.LogRotator">
                <daysToKeep>3</daysToKeep>
                <numToKeep>-1</numToKeep>
                <artifactDaysToKeep>-1</artifactDaysToKeep>
                <artifactNumToKeep>-1</artifactNumToKeep>
            </strategy>
        </jenkins.model.BuildDiscarderProperty>
        <hudson.model.ParametersDefinitionProperty>
            <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                    <name>repository_url</name>
                    <trim>false</trim>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                    <name>branch</name>
                    <trim>false</trim>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                    <name>environment</name>
                    <trim>false</trim>
                </hudson.model.StringParameterDefinition>
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
    </properties>
    <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3536.vb_8a_6628079d5">
        <script>
            pipeline {&#x000A;
                agent any&#x000A;
                    stages {&#x000A;
                        stage(&apos;clone repo&apos;) {&#x000A;
                            steps{&#x000A;
                                sshagent (credentials: [&quot;github&quot;]) {&#x000A;
                                    git url: &apos;${repository_url}&apos;, branch: &apos;${branch}&apos;&#x000A;
                                }&#x000A;
                                script {&#x000A;
                                    commit_id = sh(returnStdout: true, script: &apos;git rev-parse HEAD&apos;).trim()&#x000A;
                                    image_repository_host='${IMAGE_REPOSITORY_HOST_REPLACE}'&#x000A;
                                    image_repository_org='${IMAGE_REPOSITORY_ORG_REPLACE}'&#x000A;
                                    image_repository_username='${IMAGE_REPOSITORY_USERNAME_REPLACE}'&#x000A;
                                    image_repository_password='${IMAGE_REPOSITORY_PASSWORD_REPLACE}'&#x000A;
                                    job_name='${JOB_NAME_REPLACE}'&#x000A;
                                    environment="""${environment}"""&#x000A;
                                    image_id=&quot;&quot;&quot;${image_repository_host}/${image_repository_org}/${job_name}:${commit_id}&quot;&quot;&quot;&#x000A;
                                    buildDescription &quot;&quot;&quot;${image_id}&quot;&quot;&quot;&#x000A;
                                }&#x000A;
                            }&#x000A;
                        }&#x000A;
                    stage(&apos;complie&apos;) {&#x000A;
                        steps{&#x000A;
                            dir(&apos;${JOB_NAME_REPLACE}-server&apos;) {&#x000A;
                                sh &apos;mvn clean package&apos;&#x000A;
                            }&#x000A;
                        }&#x000A;
                    }&#x000A;
                    stage(&apos;build image&apos;) {&#x000A;
                        steps{&#x000A;
                            dir(&apos;${JOB_NAME_REPLACE}-server/target&apos;) {&#x000A;
                                sh &quot;&quot;&quot;docker build -t ${image_id} -f ../Dockerfile-${environment} .&quot;&quot;&quot;&#x000A;
                                sh &quot;&quot;&quot;docker login -u ${image_repository_username} -p ${image_repository_password} ${image_repository_host}&quot;&quot;&quot;&#x000A;
                                sh &quot;&quot;&quot;docker push ${image_id}&quot;&quot;&quot;&#x000A;
                                sh &quot;&quot;&quot;docker rmi ${image_id}&quot;&quot;&quot;&#x000A;
                            }&#x000A;
                        }&#x000A;
                    }&#x000A;
                }&#x000A;
            }&#x000A;
        </script>
        <sandbox>true</sandbox>
    </definition>
    <triggers/>
    <disabled>false</disabled>
</flow-definition>